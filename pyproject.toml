[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "aiida-dmrg"
description = "AiiDA plugin for the DMRG software."
authors = [{name = "Raphael Graf"}, {name = "Goncalo Catarina"}, {name = "Aliaksandr Yakutovich"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Julia :: 1.10",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AiiDA",
]
requires-python = ">=3.9"
dependencies = [
    "aiida-core>=2.0.0,<3.0.0",
    "pymatgen>=2022.1.20",
    "cclib>=1.8,<=2.0",
    "ase",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/nanotech-empa/aiida-dmrg" # Todo: copy repo link to here

[project.optional-dependencies]
testing = [
    "pgtest~=1.3.2",
    "wheel~=0.31",
    "coverage",
    "pytest~=7.0",
    "pytest-cov",
    "pytest-regressions~=2.2",
    "coveralls",
    # TODO
]
pre-commit = [# TODO
    "pre-commit>=2.21.0",
]
dev = [# TODO
    "bumpver==2022.1119",
]

[project.entry-points."aiida.calculations"]
"dmrg" = "aiida_dmrg.calculations:DMRGCalculation"
"dyncorr" = "aiida_dmrg.calculations:DynCorrCalculation"

[project.entry-points."aiida.parsers"]
"dmrg.base" = "aiida_dmrg.parsers.dmrg:DMRGBaseParser"
"dyncorr" = "aiida_dmrg.parsers.dyncorr_parser:DynCorrParser"

[project.entry-points."aiida.workflows"]
"dmrg.base" = "aiida_dmrg.workchains:DMRGBaseWorkChain"
"dyncorr" = "aiida_dmrg.workchains:DynCorrWorkChain"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = ["LICENSE"]

[tool.setuptools.packages]
find = {include = ["aiida_dmrg*"]}

[tool.setuptools.dynamic]
version = {attr = "aiida_dmrg.version.__version__"}

[tool.bumpver]
current_version = "v1.0.0"
version_pattern = "vMAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version {old_version} -> {new_version}."
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"aiida_dmrg/version.py" = [
    '__version__ = "{pep440_version}"',
]
